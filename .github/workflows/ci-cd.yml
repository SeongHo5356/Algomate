name: CI/CD for Crawling Service

on:
  push:
    branches: [main]
    paths:
      - 'crawling/**'  # crawling 폴더 변경 시만 실행
      - '.github/workflows/**' # 워크플로우 파일 변경도 포함
  workflow_dispatch: # 수동 실행 추가    

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./crawling  # 작업 디렉토리 설정
    steps:
      # 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # Docker Buildx 설정
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Docker Hub 로그인
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # FastAPI 테스트 및 빌드
      - name: Build and Push Crawling Image
        run: |
          # pip install pytest
          # pytest  # 테스트 파일 없으면 생략 가능
          docker build -t ${{ secrets.DOCKER_USERNAME }}/crawling:${{ github.sha }} -t ${{ secrets.DOCKER_USERNAME }}/crawling:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/crawling:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/crawling:latest  # latest 태그 추가
      
      # 배포 단계
      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /home/ubuntu/algomate/crawling
            echo "Current directory: $(pwd)"
            ls -l
            cat docker-compose.yml || echo "docker-compose.yml not found"
            export COMPOSE_DOCKER_CLI_BUILD=1
            export DOCKER_BUILDKIT=1
            export DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}  # 변수 설정 추가
            sed -i "s|image: .*fastapi_app$|image: ${{ secrets.DOCKER_USERNAME }}/crawling:${{ github.sha }}|g" docker-compose.yml
            sed -i "s|image: .*celery_worker$|image: ${{ secrets.DOCKER_USERNAME }}/crawling:${{ github.sha }}|g" docker-compose.yml
            docker-compose pull || echo "Pull failed"
            docker-compose up -d --remove-orphans || echo "Up failed"
            docker-compose ps || echo "PS failed"
            docker ps -a